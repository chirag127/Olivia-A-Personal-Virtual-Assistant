

            # translate to arabic
            if 'to arabic' in query:
                query = query.replace("to arabic", "")
                translator = Translator()
                result = translator.translate(query, dest='ar')
                sp(result.text)
                # translate to bengali
            elif 'to bengali' in query:
                query = query.replace("to bengali", "")
                translator = Translator()
                result = translator.translate(query, dest='bn')
                sp(result.text)

                # translate to bulgarian
            elif 'to bulgarian' in query:
                query = query.replace("to bulgarian", "")
                translator = Translator()
                result = translator.translate(query, dest='bg')
                sp(result.text)

                # translate to catalan

            elif 'to catalan' in query:
                query = query.replace("to catalan", "")
                translator = Translator()
                result = translator.translate(query, dest='ca')
                sp(result.text)

                # translate to chinese

            elif 'to chinese' in query:
                query = query.replace("to chinese", "")
                translator = Translator()
                result = translator.translate(query, dest='zh-cn')
                sp(result.text)

                # translate to croatian

            elif 'to croatian' in query:
                query = query.replace("to croatian", "")
                translator = Translator()
                result = translator.translate(query, dest='hr')
                sp(result.text)

                # translate to czech

            elif 'to czech' in query:
                query = query.replace("to czech", "")
                translator = Translator()
                result = translator.translate(query, dest='cs')
                sp(result.text)

                # translate to danish

            elif 'to danish' in query:
                query = query.replace("to danish", "")
                translator = Translator()
                result = translator.translate(query, dest='da')
                sp(result.text)

                # translate to dutch

            elif 'to dutch' in query:
                query = query.replace("to dutch", "")
                translator = Translator()
                result = translator.translate(query, dest='nl')
                sp(result.text)

                # translate to estonian

            elif 'to estonian' in query:
                query = query.replace("to estonian", "")
                translator = Translator()
                result = translator.translate(query, dest='et')
                sp(result.text)

                # translate to finnish

            elif 'to finnish' in query:
                query = query.replace("to finnish", "")
                translator = Translator()
                result = translator.translate(query, dest='fi')
                sp(result.text)

                # translate to greek

            elif 'to greek' in query:

                query = query.replace("to greek", "")
                translator = Translator()
                result = translator.translate(query, dest='el')
                sp(result.text)

                # translate to hebrew

            elif 'to hebrew' in query:
                query = query.replace("to hebrew", "")
                translator = Translator()
                result = translator.translate(query, dest='he')
                speak(result.text)

                # translate to hindi

            elif 'to hindi' in query:
                query = query.replace("to hindi", "")
                translator = Translator()
                result = translator.translate(query, dest='hi')
                speak(result.text)

                # translate to hungarian

            elif 'to hungarian' in query:
                query = query.replace("to hungarian", "")
                translator = Translator()
                result = translator.translate(query, dest='hu')
                speak(result.text)

                # translate to indonesian

            elif 'to indonesian' in query:
                query = query.replace("to indonesian", "")
                translator = Translator()
                result = translator.translate(query, dest='id')
                speak(result.text)

                # translate to italian

            elif 'to italian' in query:

                query = query.replace("to italian", "")
                translator = Translator()
                result = translator.translate(query, dest='it')
                speak(result.text)

                # translate to japanese

            elif 'to japanese' in query:
                query = query.replace("to japanese", "")
                translator = Translator()
                result = translator.translate(query, dest='ja')
                speak(result.text)

                # translate to korean

            elif 'to korean' in query:
                query = query.replace("to korean", "")
                translator = Translator()
                result = translator.translate(query, dest='ko')
                speak(result.text)

            # translate to latvian

            elif 'to latvian' in query:
                query = query.replace("to latvian", "")
                translator = Translator()
                result = translator.translate(query, dest='lv')
                sp(result.text)

                # translate to lithuanian

            elif 'to lithuanian' in query:
                query = query.replace("to lithuanian", "")
                translator = Translator()
                result = translator.translate(query, dest='lt')
                sp(result.text)

                # translate to malay

            elif 'to malay' in query:
                query = query.replace("to malay", "")
                translator = Translator()
                result = translator.translate(query, dest='ms')
                sp(result.text)

                # translate to norwegian

            elif 'to norwegian' in query:
                query = query.replace("to norwegian", "")
                translator = Translator()
                result = translator.translate(query, dest='no')
                sp(result.text)

                # translate to persian

            elif 'to persian' in query:
                query = query.replace("to persian", "")
                translator = Translator()
                result = translator.translate(query, dest='fa')
                sp(result.text)

                # translate to polish

            elif 'to polish' in query:
                query = query.replace("to polish", "")
                translator = Translator()
                result = translator.translate(query, dest='pl')
                sp(result.text)

                # translate to portuguese

            elif 'to portuguese' in query:
                query = query.replace("to portuguese", "")
                translator = Translator()
                result = translator.translate(query, dest='pt')
                sp(result.text)

                # translate to romanian

            elif 'to romanian' in query:
                query = query.replace("to romanian", "")
                translator = Translator()
                result = translator.translate(query, dest='ro')
                sp(result.text)

                # translate to russian

            elif 'to russian' in query:
                query = query.replace("to russian", "")
                translator = Translator()
                result = translator.translate(query, dest='ru')
                sp(result.text)

                # translate to spanish
            elif 'to spanish' in query:
                query = query.replace("to spanish", "")
                translator = Translator()
                result = translator.translate(query, dest='es')
                sp(result.text)

                # translate to serbian
            elif 'to serbian' in query:
                query = query.replace("to serbian", "")
                translator = Translator()
                result = translator.translate(query, dest='sr')
                sp(result.text)

                # translate to slovak

            elif 'to slovak' in query:
                query = query.replace("to slovak", "")
                translator = Translator()
                result = translator.translate(query, dest='sk')
                sp(result.text)

                # translate to spanish

            elif 'to spanish' in query:
                query = query.replace("to spanish", "")
                translator = Translator()
                result = translator.translate(query, dest='es')
                sp(result.text)
                # translate to swedish

            elif 'to swedish' in query:
                query = query.replace("to swedish", "")
                translator = Translator()
                result = translator.translate(query, dest='sv')
                sp(result.text)

                # translate to thai

            elif 'to thai' in query:
                query = query.replace("to thai", "")
                translator = Translator()
                result = translator.translate(query, dest='th')
                sp(result.text)

                # translate to turkish

            elif 'to turkish' in query:
                query = query.replace("to turkish", "")
                translator = Translator()
                result = translator.translate(query, dest='tr')
                sp(result.text)

                # translate to ukrainian

            elif 'to ukrainian' in query:
                query = query.replace("to ukrainian", "")
                translator = Translator()
                result = translator.translate(query, dest='uk')
                sp(result.text)

                # translate to urdu

            elif 'to urdu' in query:
                query = query.replace("to urdu", "")
                translator = Translator()
                result = translator.translate(query, dest='ur')
                sp(result.text)

                # translate to vietnamese

            elif 'to vietnamese' in query:
                query = query.replace("to vietnamese", "")
                translator = Translator()
                result = translator.translate(query, dest='vi')
                sp(result.text)

            # translate to hindi
            elif 'to hindi' in query:
                query = query.replace("to hindi", "")
                translator = Translator()
                result = translator.translate(query, dest='hi')
                sp(result.text)

            # translate to marathi
            elif 'to marathi' in query:
                query = query.replace("to marathi", "")
                translator = Translator()
                result = translator.translate(query, dest='mr')
                sp(result.text)

            # translate to tamil

            elif 'to tamil' in query:
                query = query.replace("to tamil", "")
                translator = Translator()
                result = translator.translate(query, dest='ta')
                sp(result.text)

            # translate to telugu
            elif 'to telugu' in query:

                query = query.replace("to telugu", "")
                translator = Translator()
                result = translator.translate(query, dest='te')
                sp(result.text)

            # translate to kannada
            elif 'to kannada' in query:

                query = query.replace("to kannada", "")
                translator = Translator()
                result = translator.translate(query, dest='kn')
                sp(result.text)    

            # translate to malayalam
            elif 'to malayalam' in query:
                query = query.replace("to malayalam", "")
                translator = Translator()
                result = translator.translate(query, dest='ml')
                sp(result.text)

            # translate to punjabi
            elif 'to punjabi' in query:
                query = query.replace("to punjabi", "")
                translator = Translator()
                result = translator.translate(query, dest='pa')
                sp(result.text)

            # translate to gujarati
            elif 'to gujarati' in query:
                query = query.replace("to gujarati", "")
                translator = Translator()
                result = translator.translate(query, dest='gu')
                sp(result.text)

            # translate to kannada
            elif 'to kannada' in query:
                query = query.replace("to kannada", "")
                translator = Translator()
                result = translator.translate(query, dest='kn')
                sp(result.text)

            # translate to malayalam
            elif 'to malayalam' in query:
                query = query.replace("to malayalam", "")
                translator = Translator()
                result = translator.translate(query, dest='ml')
                sp(result.text)


/* comment start 

#  BeautifulSoup is used for web scraping
from bs4 import BeautifulSoup
# googletrans is used for translation and google translate is used for language detection
from googletrans import Translator
# ctypes is used maniplulate the data types
import ctypes
import datetime  # date and time module is for timezones
import json  # json library is used for reading and writing json files obtained by apis
import math  # math library provides math fuctions .
import os  # os library is used to open the system and open the specified file
import pyautogui  # pyaoautogui is used for mouse and keyboard control
import pyttsx3  # pyttx3 is used for text to speech
import pywhatkit  # pywhatkit is used for playing the youtube videos
import random  # random library is used for random number generation
import re  # regular expression library is used for regular expressions
import requests  # requests library is used to make http requests to apis
import shutil  # shutil is used to copy files and folders from one location to another location or for archiving files and folders
import smtplib  # smtplib is used for sending emails
# spech_recognition library is used for speech recognition and google translate is used for language detection
import speech_recognition as sr
import subprocess  # subprocess is used to run the command line commands for screen capture
import sys  # sys library is used to exit the program
import time  # time library is used for timezones
import urlopen  # used to open url
import webbrowser  # webbrowser is used to open the url in the default browser
import wikipedia  # get article from wikipedia
import win32com.client as wincl
import winshell
import clipboard  # clipboard is used to read the text from the clipboard
import psutil  # pip install psutil # psutil is used to get the cpu usage and ram usage and disk usage and battery usage
import tkinter as tk
# I was getting error so i install pyaudio
# error in that too so i googled it on the stackover flow.
from tkinter import *
import numpy as np

*/ comment end */
                elif 'f1' in query:
                    pyautogui.press('f1')

                elif 'f2' in query:

                    pyautogui.press('f2')

                elif 'f3' in query:

                    pyautogui.press('f3')

                elif 'f4' in query:

                    pyautogui.press('f4')

                elif 'f5' in query:

                    pyautogui.press('f5')

                elif 'f6' in query:
                        
                        pyautogui.press('f6')

                elif 'f7' in query:

                    pyautogui.press('f7')

                elif 'f8' in query:
                        
                        pyautogui.press('f8')

                elif 'f9' in query:


                    pyautogui.press('f9')

                elif 'f10' in query:
                        
                        pyautogui.press('f10')

                elif 'f11' in query:
                        
                        pyautogui.press('f11')

                elif 'f12' in query:

                    pyautogui.press('f12')

                elif 'ctrl' in query:
                    pyautogui.press('ctrl')

                elif 'shift' in query:
                    pyautogui.press('shift')

                elif 'alt' in query:
                    pyautogui.press('alt')

                elif 'win' in query:
                    pyautogui.press('win')

                elif 'ctrl' in query:
                    pyautogui.press('ctrl')

                elif 'a' in query:
                    pyautogui.press('a')

                        
                elif 'b' in query:
                    pyautogui.press('b')

                elif 'c' in query:
                    pyautogui.press('c')

                elif 'd' in query:
                    pyautogui.press('d')

                elif 'e' in query:
                    pyautogui.press('e')

                elif 'f' in query:
                    pyautogui.press('f')

                elif 'g' in query:

                    pyautogui.press('g')

                elif 'h' in query:
                        
                        pyautogui.press('h')

                elif 'i' in query:
                    pyautogui.press('i')

                elif 'j' in query:
                    pyautogui.press('j')

                elif 'k' in query:
                    pyautogui.press('k')

                elif 'l' in query:
                    pyautogui.press('l')

                elif 'm' in query:

                    pyautogui.press('m')
                    

1. Speech recognition library: [PyAudio](https://people.csail.mit.edu/hubert/pyaudio/)
2. BeutyifulSoup library: [BeautifulSoup](https://www.crummy.com/software/BeautifulSoup/)
3. Google Translate library for translation of the text: [Google Translate](https://pypi.python.org/pypi/gT/)
4. Google Speech Recognition library: [SpeechRecognition](https://pypi.python.org/pypi/SpeechRecognition/)
5. Google Speech Synthesis library: [gTTS](https://pypi.python.org/pypi/gTTS/)
6. PyAudio library: [PyAudio](https://people.csail.mit.edu/hubert/pyaudio/)
7. Tkinter library: [Tkinter](https://docs.python.org/3/library/tkinter.html)
8. Pygame library: [Pygame](https://www.pygame.org/)
9. Pyttsx library: [Pyttsx](https://pypi.python.org/pypi/pyttsx3/)
10. Datetime library: [Datetime](https://docs.python.org/3/library/datetime.html)
11. 


        elif 'play' in query and 'music play' in query or 'playlist' in query:
            speak('ok sir enjoy your music')
            spotify_path = 'C:/Users/hp/AppData/Roaming/Spotify/Spotify.exe'
            os.startfile(spotify_path)
            time.sleep(1)
            pyautogui.click(button='left')
            pyautogui.press('space')
            presshotkey('alt', 'f4')
            while not 'wake up' in wakeup_txt:
                wakeup_txt = time.sleep()
                if wakeup_txt == 'quit':
                    speak('bye bye sir. have a great day')
                    running = False
                    sys.exit()
                elif 'pause' in wakeup_txt or 'play' in wakeup_txt:
                    os.system('spotify')
                    time.sleep(1)
                    pyautogui.press('space')
                    presshotkey('alt', 'f4')

                elif 'close spotify' in wakeup_txt:
                    os.system('TASKKILL /F /IM Spotify.exe')
            speak('hello again sir')

